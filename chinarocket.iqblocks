{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"_2.^beQjx|FGt38A,8(E\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable></variables><block type=\"iq_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"70\" y=\"-10\"><next><block type=\"iq_control_if_then_else\" id=\"VyaNiAQ!@s$W=Qw7`S+v\"><value name=\"CONDITION\"><block type=\"iq_sensing_object_in_front\" id=\"kfPLPTiz.HAA_305bXRz\"><field name=\"SONAR\">Distance</field></block></value><statement name=\"SUBSTACK\"><block type=\"iq_looks_print\" id=\"M@MdE$zK%9K;?Sv2dF*d\"><value name=\"DATA\"><shadow type=\"text\" id=\"Pdw9D2IYsZh0#46!X0eS\"><field name=\"TEXT\">China rocket found!</field></shadow></value></block></statement><statement name=\"SUBSTACK2\"><block type=\"iq_looks_print\" id=\"?JgCSjf83vHIiK).j_3_\"><value name=\"DATA\"><shadow type=\"text\" id=\"[_HJ{U5gbq*j,p%@x{5:\"><field name=\"TEXT\">China rocket not found.</field></shadow></value></block></statement></block></next></block></xml>","rconfig":[{"port":[1,2,3],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","setting":{"type":"2-motor","wheelSize":"200mm","gearRatio":"1:1","direction":"fwd","gyroType":"smart","width":"173","unit":"mm","wheelbase":"76","wheelbaseUnit":"mm"}},{"port":[4],"name":"Distance","customName":true,"deviceType":"Distance","setting":{}}],"slot":0,"platform":"IQ","sdkVersion":"","appVersion":"","fileFormat":"1.0.0","icon":"","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"iq_cpp.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START IQ MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END IQ MACROS\n\n\n// Robot configuration code.\nmotor LeftDriveSmart = motor(PORT1, 1, false);\nmotor RightDriveSmart = motor(PORT2, 1, true);\ngyro TurnGyroSmart = gyro(PORT3, true);\nsmartdrive Drivetrain= smartdrive(LeftDriveSmart, RightDriveSmart, TurnGyroSmart,200);\n\nsonar Distance = sonar(PORT4);\n\n\nvoid calibrateDrivetrain() {\n  wait(200, msec);\n  Brain.Screen.print(\"Calibrating Gyro\");\n  while (TurnGyroSmart.isCalibrating()) {\n    wait(25, msec);\n  }\n\n  // Clears the screen and returns to the cursor to row 1, column 1.\n  Brain.Screen.clearScreen();\n  Brain.Screen.setCursor(1, 1);\n}\n\n\n//Vision sensor index vars.\nint Vision1_objectIndex = 0;\n\n\n\n// Generated code.\n\n// Include the IQ Library\n#include \"iq_cpp.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nint Brain_precision = 0;\n\nfloat myVariable;\n\n// \"when started\" hat block\nint whenStarted1() {\n  if (Distance.foundObject()) {\n    Brain.Screen.print(\"China rocket found!\");\n  }\n  else {\n    Brain.Screen.print(\"China rocket not found.\");\n  }\n  return 0;\n}\n\n\nint main() {\n  // Calibrate the Drivetrain Gyro\n  calibrateDrivetrain();\n\n  whenStarted1();\n}"}
